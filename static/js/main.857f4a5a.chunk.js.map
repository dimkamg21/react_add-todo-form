{"version":3,"sources":["api/users.ts","utils/getUserById.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoTemplate","title","completed","TodoForm","onAdd","useState","todo","setTodo","isFilledTitle","setIsFilledTitle","isFilledUserId","setIsFilledUserId","touched","setTouched","hasErrorTitle","length","hasErrorUserId","action","method","onSubmit","event","preventDefault","trim","className","htmlFor","type","placeholder","value","onChange","target","onBlur","disabled","map","UserInfo","href","TodoInfo","cn","TodoList","todos","todosSer","App","setTodos","newTodo","currentTodos","Math","max","toDo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.857f4a5a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../utils/types/types';\nimport { getUserById } from '../../utils/getUserById';\n\ntype Props = {\n  onAdd: (todo: Todo) => void,\n};\n\nconst TodoTemplate = {\n  id: 0,\n  title: '',\n  completed: false,\n  user: null,\n};\n\nexport const TodoForm: React.FC<Props> = ({ onAdd }) => {\n  const [todo, setTodo] = useState<Todo>(TodoTemplate);\n\n  const [isFilledTitle, setIsFilledTitle] = useState(true);\n  const [isFilledUserId, setIsFilledUserId] = useState(true);\n\n  const [touched, setTouched] = useState(false);\n\n  const resetForm = () => {\n    setTodo(TodoTemplate);\n\n    setIsFilledTitle(true);\n    setIsFilledUserId(true);\n\n    setTouched(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodo(\n      { ...todo, title: event.target.value },\n    );\n\n    setIsFilledTitle(true);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodo(\n      {\n        ...todo,\n        user: getUserById(+event.target.value),\n      },\n    );\n\n    setIsFilledUserId(true);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todo.title.trim() || !todo.user?.id) {\n      setIsFilledUserId(false);\n      setIsFilledTitle(false);\n\n      return;\n    }\n\n    onAdd(todo);\n    resetForm();\n  };\n\n  const hasErrorTitle = (todo.title.length < 1 && touched) || !isFilledTitle;\n  const hasErrorUserId = todo.user?.id !== 0 && !isFilledUserId;\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"todo-title\" className=\"title is-4\">\n          Title\n        </label>\n\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          name=\"todo-title\"\n          data-cy=\"titleInput\"\n          className=\"input is-primary is-normal\"\n          placeholder=\"Please enter a title\"\n          value={todo.title}\n          onChange={handleTitleChange}\n          onBlur={() => setTouched(true)}\n        />\n\n        {hasErrorTitle && (\n          <div className=\"icon-text\">\n            <span className=\"icon has-text-danger\">\n              <i className=\"fas fa-ban\" />\n            </span>\n            <span>You do not enter a title</span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"todo-user\" className=\"title is-4\">\n          User\n        </label>\n\n        <div className=\"select\">\n          <select\n            name=\"todo-user\"\n            data-cy=\"userSelect\"\n            id=\"todo-user\"\n            value={todo.user ? todo.user.id : 0}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </div>\n\n        {hasErrorUserId && (\n          <div className=\"icon-text\">\n            <span className=\"icon has-text-danger\">\n              <i className=\"fas fa-ban\" />\n            </span>\n            <span>You do not choose a user</span>\n          </div>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n        className=\"button is-primary\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../utils/types/types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    className=\"UserInfo\"\n    href={`mailto:${user.email}`}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../utils/types/types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n    {todo.user && (\n      <UserInfo\n        user={todo.user}\n      />\n    )}\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../utils/types/types';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useState } from 'react';\nimport { Todo } from './utils/types/types';\nimport { TodoForm } from './components/TodoForm';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './utils/getUserById';\n\nexport const todosSer = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosSer);\n\n  const onAdd = (newTodo: Todo) => {\n    setTodos(currentTodos => [\n      ...currentTodos,\n      {\n        ...newTodo,\n        id: Math.max(...(todos.map(toDo => toDo.id))) + 1,\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"section App box\">\n      <h1 className=\"title is-1\">Add todo form</h1>\n\n      <TodoForm onAdd={onAdd} />\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}